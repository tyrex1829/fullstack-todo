Creating a new folder which contains both frontend and backend of app.

Create high level readme file which basically describe the functionality of our app.

Make new folder for backend init npm here, install express and jwt here, write express boilerplate code inside index.js file with express.json middleware.

Ideally next step will be zod for validation. For this, i zod, make zod schema, do this in different file and export it.

import that zod file in index.js and complete post and put method, for post method -> we have to create payload, parse it, if success put it into mongoDb, if not return msg. for put method -> we have to update payload, parse the updated one, if success update into mongoDb, if not return msg.

Until now, 2 things are done -> 1. creating a http server, 2. done with validation.

Last thing which is left is -> Creating a mongoDB schema, if inputs are correct, 1. putting something on mongoDB, 2. updating something on mongoDB, 3. getting all the todos from mongoDB.

For mongoDB, i mongoose, require it, connect with connection string, make schema and the make a model. All this done in separate file, just export it.

Import it into index.js, now in post(which basically create todo), will do todo.create({...}) and then just do res.json. Now in get(which basically get all todos), will todo.find({}) and just do res.json(). Now in put(which will basically mark todo as completed), will do todo.update({id}, {completed: true}) and then just do res.json. All these are await.

Test your backend on postman.

Now for frontend, use react. create vite. and do required stuff.

Make component folder, Create new component -> CreateTodo.jsx.

It will have two input fields and an button to add a todo.